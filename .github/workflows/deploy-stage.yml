name: Deploy to Production

on:
  push:
    branches:
      - master

jobs:

  build-node: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Upload node-modules
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: node_modules


  build-php:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install dependencies
        run: |
          sudo apt-get update
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev

      - name: Upload vendor
        uses: actions/upload-artifact@v3
        with:
          name: vendor
          path: vendor

  deploy:
    needs: [build-node, build-php]
    environment: PROD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download node_modules
        uses: actions/download-artifact@v3
        with:
          name: node_modules

      - name: Download vendor
        uses: actions/download-artifact@v3
        with:
          name: vendor


      - name: Prepare
        run: sudo apt-get -y install zip unzip lftp
      
      - name: List files
        run: ls -la
      
      - name: Zip production app
        run: zip -rq app.zip contents/* css/* img/* inc/* js/* node_modules/* vendor/* .htaccess index.php login_ivao.php


      - name: Zip deploy helper scripts
        run: zip -rqj helpers.zip deploy-scripts/cleanup.php deploy-scripts/wipeFiles.php

      - name: Upload helper scripts and unzipper
        run: |
          lftp -c "set ftp:ssl-allow no; open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};  put -O ${{ secrets.DEPLOY_PATH }} helpers.zip"
          lftp -c "set ftp:ssl-allow no; open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};  put -O ${{ secrets.DEPLOY_PATH }} deploy-scripts/unzip.php"
          curl -d "dir=.&file=helpers.zip" -X POST ${{ vars.HOST }}/unzip.php

      - name: Remove old files
        run:  curl ${{ vars.HOST }}/wipeFiles.php

      - name: Upload new version
        run: |
          lftp -c "set ftp:ssl-allow no; open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};  put -O ${{ secrets.DEPLOY_PATH }} app.zip"
          curl -d "dir=./&file=app.zip" -X POST ${{ vars.HOST }}/unzip.php

      - name: Cleanup
        run: curl ${{ vars.HOST }}/cleanup.php
  
